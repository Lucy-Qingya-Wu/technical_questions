import java.util.*;
public class Answer {
	
	public static Node returnK2Last(LinkedList ll, int k){
		
		Node faster = ll.head;
		
		Node slower = ll.head;
		
		int count = 0;
		
		while (faster!=null && count<k){
			faster = faster.next;
			count++;
		}
		
		if (count<k){
			return null;
		}
		
		while(faster!=null){
			faster = faster.next;
			slower = slower.next;
		}
		return slower;
		
		
		
	}
	

	
	public static void main(String[] args){
		LinkedList ll = new LinkedList();
		ll.appendToTail(1);
		ll.appendToTail(2);
		ll.appendToTail(3);
		ll.appendToTail(4);
		ll.print();
		System.out.println("-------------");
		Node result = returnK2Last(ll, 5);
		if (result != null){
			System.out.println(result.value);
		}
	}
	
	
}

class LinkedList{
	Node head;
	
	LinkedList(){
		this.head=null;
	}
	
	public void print(){
		Node n = this.head;
		while (n!= null){
			System.out.println(n.value);
			n=n.next;
		}
	}
	
	public void appendToTail(int value){
		Node newNode = new Node(value);
		if (this.head == null){
			
			this.head = newNode;
		}
		else{
			Node n = this.head;
			while (n.next!= null){
				n = n.next;
			}
			n.next = newNode;
		}
		
	}
	
	
}

class Node{
	
	public Node next;
	public int value;
	
	Node(int value){
		this.value=value;
		this.next=null;
	}
	
}
